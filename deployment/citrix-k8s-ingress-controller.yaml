---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cic-k8-role
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "ingresses", "pods", "secrets"]
    verbs: ["*"]

  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cic-k8-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cic-k8-role
subjects:
- kind: ServiceAccount
  name: cic-k8-role
  namespace: default
apiVersion: rbac.authorization.k8s.io/v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cic-k8-role
  namespace: default
---
apiVersion: v1
kind: Pod
metadata:
  name: cic-k8s-ingress-controller
  labels:
    app: cic-k8s-ingress-controller
spec: 
      serviceAccountName: cic-k8-role
      containers:
      - name: cic-k8s-ingress-controller
        image: "us.gcr.io/citrix-217108/citrix-k8s-ingress-controller:latest"
        env:
        # Set NetScaler NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled) 
        - name: "NS_IP"
          value: "x.x.x.x"
        # Set username for Nitro
         - name: "NS_USER"
          valueFrom:
           secretKeyRef:
            name: nslogin
            key: username
        # Set user password for Nitro
        - name: "NS_PASSWORD"
          valueFrom:
           secretKeyRef:
            name: nslogin
            key: password
        # Set log level
        - name: "EULA"
          value: "yes"
