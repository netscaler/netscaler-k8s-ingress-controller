#Cluster role required by CPX
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cpx
rules:
  - apiGroups: [""]
    resources: ["endpoints", "ingresses", "pods", "secrets", "nodes", "routes", "namespaces"]
    verbs: ["get", "list", "watch"]
  # services/status is needed to update the loadbalancer IP in service status for integrating
  # service of type LoadBalancer with external-dns
  - apiGroups: [""]
    resources: ["services/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["citrix.com"]
    resources: ["rewritepolicies", "canarycrds", "authpolicies", "ratelimits"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["citrix.com"]
    resources: ["rewritepolicies/status", "canarycrds/status", "authpolicies/status", "ratelimits/status"]
    verbs: ["get", "list", "patch"]
  - apiGroups: ["citrix.com"]
    resources: ["vips"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["route.openshift.io"]
    resources: ["routes"]
    verbs: ["get", "list", "watch"]
---
#Cluster role bindings required by CPX
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cpx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpx
subjects:
- kind: ServiceAccount
  name: cpx
  namespace: default
apiVersion: rbac.authorization.k8s.io/v1
---
#Service account for CPX
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpx
  namespace: default
---
#Deploy a standalone CPX as an ingress device
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cpx-ingress
  name: cpx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpx-ingress
  template:
    metadata:
      labels:
        app: cpx-ingress
      name: cpx-ingress
    spec:
      serviceAccountName: cpx
      containers:
      - env:
        - name: EULA
          value: "yes"
        - name: KUBERNETES_TASK_ID
        image: quay.io/citrix/citrix-k8s-cpx-ingress:13.0-83.27
        imagePullPolicy: Always
        name: cpx-ingress
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 9080
          name: nitro-http
          protocol: TCP
        - containerPort: 9443
          name: nitro-https
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 9080
          timeoutSeconds: 1
        securityContext:
          privileged: true
      - args:
        - --ingress-classes tier-2-cpx
        env:
        - name: EULA
          value: "yes"
        - name: NS_IP
          value: 127.0.0.1
        - name: NS_PROTOCOL
          value: HTTP
        - name: NS_PORT
          value: "80"
        - name: NS_DEPLOYMENT_MODE
          value: SIDECAR
        - name: NS_ENABLE_MONITORING
          value: "YES"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/citrix/citrix-k8s-ingress-controller:1.4.392
        imagePullPolicy: Always
        name: cic
---
#Expose the CPX as a service
kind: Service
apiVersion: v1
metadata:
  name: cpx-ingress
  labels:
    name: cpx-ingress
spec:
  selector:
    app: cpx-ingress
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
---

