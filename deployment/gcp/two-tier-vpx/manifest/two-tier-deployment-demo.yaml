# If using this on GKE
# Make sure you have cluster-admin role for your account
# kubectl create clusterrolebinding citrix-cluster-admin --clusterrole=cluster-admin --user=<username of your google account>
#
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: apache
  labels:
      name: apache
spec:
  selector:
    matchLabels:
      app: apache
  replicas: 2
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - name: apache
        image: httpd:latest
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: apache
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: apache
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "ingresses", "pods", "secrets"]
    verbs: ["*"]
  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpx
subjects:
- kind: ServiceAccount
  name: cpx
  namespace: default
apiVersion: rbac.authorization.k8s.io/v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpx
  namespace: default
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: citrix-ingress
  annotations:
   kubernetes.io/ingress.class: "citrix-ingress"
   ingress.citrix.com/secure-backend: "False"
   ingress.citrix.com/insecure-termination: "allow"
spec:
  tls:
  - secretName: cert-key
  rules:
  - host: citrix-ingress.com
    http:
      paths:
      - path: /
        backend:
          serviceName: apache
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: cpx-ingress
  labels:
    name: cpx-ingress
spec:
  selector:
    matchLabels:
      name: cpx-ingress
  template:
    metadata:
      labels:
        name: cpx-ingress
      annotations:
        NETSCALER_AS_APP: "True"
    spec:
      serviceAccountName: cpx
      containers:
        - name: cpx-ingress
          image: "quay.io/citrix/citrix-k8s-cpx-ingress:latest"
          securityContext:
            privileged: true
          env:
            - name: "EULA"
              value: "YES"
            - name: "NS_PROTOCOL"
              value: "HTTP"
            #Define the NITRO port here
            - name: "NS_PORT"
              value: "9080"
          args:
            - --ingress-classes
              citrix-ingress
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: nitro-http
              containerPort: 9080
            - name: nitro-https
              containerPort: 9443

          #This is required for Health check to succeed
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: cpx-ingress
  labels:
    name: cpx-ingress
spec:
  selector:
    name: cpx-ingress
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: vpx-ingress
  annotations:
   kubernetes.io/ingress.class: "vpx-1tier"
   ingress.citrix.com/secure-backend: "False"
   ingress.citrix.com/insecure-termination: "allow"
   ingress.citrix.com/frontend-ip: "10.10.0.10"
spec:
  tls:
  - secretName: cert2k
  rules:
  - host: citrix-ingress.com
    http:
      paths:
      - path: /
        backend:
          serviceName: cpx-ingress
          servicePort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: citrixingresscontroller
  labels:
    app: citrixingresscontroller
spec:
      serviceAccountName: cpx
      containers:
      - name: citrixingresscontroller
        image: "asia.gcr.io/netscaler-networking-k8/cic_as_container:kamet_48_104"
        env:
        # Set kube api-server URL
        - name: "kubernetes_url"
          value: "https://35.198.199.122"
        # Set NetScaler Management IP
        - name: "NS_IP"
          value: "10.148.0.201"
        # Set Protocol for Nitro
        - name: "NS_PROTOCOL"
          value: "HTTP"
        # Set port for Nitro
        - name: "NS_PORT"
          value: "80"
        # Set username for Nitro
        - name: "NS_USER"
          value: "nsroot"
        # Set user password for Nitro
        - name: "NS_PASSWORD"
          value: "nsroot"
        # Set log level
        - name: "LOGLEVEL"
          value: "DEBUG"
        - name: "EULA"
          value: "yes"
        args:
          - --ingress-classes
            vpx-1tier
        imagePullPolicy: IfNotPresent
---
