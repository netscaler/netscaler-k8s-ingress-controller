kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx-ingress-k8-role
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "ingresses", "pods", "secrets", "routes", "routes/status"]
    verbs: ["*"]
  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["*"]
  - apiGroups: ["citrix.com"]
    resources: ["rewritepolicies", "vips"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["*"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx-ingress-k8-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpx-ingress-k8-role
subjects:
- kind: ServiceAccount
  name: cpx-ingress-k8-role
  namespace: {{ .Release.Namespace }}
apiVersion: rbac.authorization.k8s.io/v1

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpx-ingress-k8-role
  namespace: {{ .Release.Namespace }}
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cpx-ingress
spec:
  replicas: 1
  template:
    metadata:
      name: cpx-ingress
      labels:
        app: cpx-ingress
      annotations:
    spec:
      serviceAccountName: cpx-ingress-k8-role
      containers:
        - name: cpx-ingress
          image: "{{ .Values.cpx.image }}"
          imagePullPolicy: {{ .Values.cpx.pullPolicy }}
          securityContext:
             privileged: true
          env:
          - name: "EULA"
            value: "{{ .Values.license.accept }}"
          - name: "KUBERNETES_TASK_ID"
            value: ""
{{- if .Values.cic.required }}
        # Add cic as a sidecar
        - name: cic
          image: "{{ .Values.cic.image }}"
          imagePullPolicy: {{ .Values.cic.pullPolicy }}
          env:
          - name: "EULA"
            value: "{{ .Values.license.accept }}"
          - name: "NS_IP"
            value: "127.0.0.1"
          - name: "NS_PROTOCOL"
            value: "HTTP"
          - name: "NS_PORT"
            value: "80"
          - name: "NS_DEPLOYMENT_MODE"
            value: "SIDECAR"
          - name: "NS_ENABLE_MONITORING"
            value: "YES"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
{{- if .Values.kubernetesURL }}
          - name: "kubernetes_url"
            value: "{{ .Values.kubernetesURL }}"
{{- end}}
{{- if .Values.ingressClass }}
          args:
           - --ingress-class
{{- range .Values.ingressClass}}
            {{.}}
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.exporter.required }}
        - name: exporter
          image: "{{ .Values.exporter.image }}"
          args:
            - "--target-nsip=127.0.0.1"
            - "--port={{ .Values.exporter.ports.containerPort }}"
          imagePullPolicy: {{ .Values.exporter.pullPolicy }}
{{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: cpx-service
  labels:
    app: cpx-service
    service-type: citrix-adc-monitor
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    name: http
  - port: 443
    protocol: TCP
    name: https
{{- if .Values.exporter.required }}
  - port: {{ .Values.exporter.ports.containerPort }}
    targetPort: {{ .Values.exporter.ports.containerPort }}
    name: exporter-port
{{- end }}
  selector:
    app: cpx-ingress


---

{{- if .Values.exporter.required }}

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
 name: citrix-adc-servicemonitor
 labels:
   servicemonitor: citrix-adc
spec:
 endpoints:
 - interval: 30s
   port: exporter-port
 selector:
   matchLabels:
     service-type: citrix-adc-monitor
 namespaceSelector:
   matchNames:
   - monitoring
   - default
   - {{ .Release.Namespace }}

{{- end }}
