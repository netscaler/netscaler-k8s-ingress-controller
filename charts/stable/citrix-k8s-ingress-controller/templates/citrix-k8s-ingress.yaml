kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cic-k8s-role
rules:
  - apiGroups: [""]
{{- if .Values.openshift }}
    resources: ["services", "endpoints", "ingresses", "pods", "secrets","nodes", "routes", "routes/status", "tokenreviews", "subjectaccessreviews"]
{{- else}}
    resources: ["services", "endpoints", "ingresses", "pods", "secrets","nodes"]
{{- end}}
    verbs: ["*"]
  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["*"]
  - apiGroups: ["citrix.com"]
    resources: ["rewritepolicies"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["*"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cic-k8s-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cic-k8s-role
subjects:
- kind: ServiceAccount
  name: cic-k8s-role
  namespace: {{ .Release.Namespace }}
apiVersion: rbac.authorization.k8s.io/v1

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cic-k8s-role
  namespace: {{ .Release.Namespace }}

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cic-k8s-ingress-controller
spec:
  replicas: 1
  template:
    metadata:
      name: cic-k8s-ingress-controller
      labels:
        app: cic-k8s-ingress-controller
    spec:
      serviceAccountName: cic-k8s-role
      containers:
      - name: cic-k8s-ingress-controller
        image: "{{ .Values.cic.image }}"
        imagePullPolicy: {{ .Values.cic.pullPolicy }}
        args:
{{- if .Values.defaultSSLCert }}
        - --default-ssl-certificate
          {{ .Values.defaultSSLCert }}
{{- end }}
{{- if .Values.ingressClass }}
          - --ingress-class
{{- range .Values.ingressClass}}
            {{.}}
{{- end }}
{{- end }}
          - --feature-node-watch
            {{.Values.nodeWatch}}
        env:
        - name: "NS_IP"
          value: "{{ .Values.nsIP }}"
{{- if .Values.openshift }}
        - name: "NS_VIP"
          value: "{{ .Values.nsVIP }}"
{{- end}}
        - name: "NS_USER"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.loginFileName | default "nslogin"}}
              key: username
        - name: "NS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.loginFileName | default "nslogin"}}
              key: password
        - name: "EULA"
          value: "{{ .Values.license.accept }}"
        - name: "LOGLEVEL"
          value: "{{ .Values.logLevel}}"
        - name: "NS_PROTOCOL"
          value: "{{ .Values.nsProtocol }}"
        - name: "NS_PORT"
          value: "{{ .Values.nsPort}}"
{{- if .Values.kubernetesURL }}
        - name: "kubernetes_url"
          value: "{{ .Values.kubernetesURL }}"
{{- end}}
{{- if .Values.exporter.required }}
      - name: exporter
        image: "{{ .Values.exporter.image }}"
        args:
          - "--secure=YES"
          - "--username=$(NS_USERNAME)"
          - "--password=$(NS_PASSWORD)"
          - "--target-nsip={{ .Values.nsIP }}"
          - "--port={{ .Values.exporter.ports.containerPort }}"
        env:
          - name: NS_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.loginFileName | default "nslogin"}}
                key: username
          - name: NS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.loginFileName | default "nslogin"}}
                key: password
        imagePullPolicy: {{ .Values.exporter.pullPolicy }}
{{- end }}
---

{{- if .Values.exporter.required }}


apiVersion: v1
kind: Service
metadata:
   name: exporter
   labels:
     app: exporter
     service-type: citrix-adc-monitor
spec:
   type: ClusterIP
   ports:
   - port: {{ .Values.exporter.ports.containerPort }}
     targetPort: {{ .Values.exporter.ports.containerPort }}
     name: exporter-port
   selector:
     app: cic-k8s-ingress-controller

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
 name: citrix-adc-servicemonitor
 labels:
   servicemonitor: citrix-adc
spec:
 endpoints:
 - interval: 30s
   port: exporter-port
 selector:
   matchLabels:
     service-type: citrix-adc-monitor
 namespaceSelector:
   matchNames:
   - monitoring
   - default
   - {{ .Release.Namespace }}

{{- end }}
