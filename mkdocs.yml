# Project information
site_name: Citrix ingress controller for Kubernetes 
site_title: Developer Docs
site_description: Ingress Controller configures Kubernetes ingress & Service Type LoadBalancer on Citrix ADCs. Supports OpenShift, Rancher on baremetal as well as AKS, GKE and EKS
site_author:
site_url: https://developer-docs.citrix.com

# Repository
repo_name: "Citrix Ingress Controller"
repo_url: "https://github.com/citrix/citrix-k8s-ingress-controller"
edit_uri: "edit/master/docs"

# Feedback

issues_uri: https://github.com/citrix/citrix-k8s-ingress-controller/issues/new
assignees_uri:
  - sreejithgs
labels_uri:
  - documentation

# Copyright
copyright: 'Copyright &copy; 1999-2020 Citrix Systems, Inc. All rights reserved.'

extra_css:
  - 'assets/stylesheets/extra.css'
  - https://use.fontawesome.com/releases/v5.12.1/css/all.css


# Configuration
theme:
  name: null
  custom_dir: devdocs-theme
  
  # 404 page
  static_templates:
    - 404.html
  
  # Don't include MkDocs' JavaScript
  include_search_page: false
  search_index_only: true
  
  # Default values, taken from mkdocs_theme.yml
  language: en
  features:
    - tabs: false
  palette:
    primary: teal
    accent: teal
  font: false
  favicon: https://docs.citrix.com/assets/images/favicon.ico
  logo: https://developer-docs.citrix.com/_static/logo.svg
  icon: fontawesome

extra:
  social:
    - icon: fontawesome/brands/youtube
      link: https://www.youtube.com/channel/UCiOupk9QF6jdk3EDKTHDykA
    - icon: fontawesome/brands/github-alt
      link: https://github.com/citrix
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/citrixdeveloper
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/company/citrix/

markdown_extensions:
  - admonition
  - codehilite
  - toc:
      permalink: true

plugins:
  - search:
      separator: '[\s\-\.]+'

# Page tree
nav:
  - Overview: index.md
  - Release notes: https://github.com/citrix/citrix-k8s-ingress-controller/releases
  - Supported platforms and deployments: support-matrix.md
  - Deployment topologies: deployment-topologies.md
  - Deploy the Citrix ingress controller: 
    - Using YAML: deploy/deploy-cic-yaml.md
    - Using Helm charts: deploy/deploy-cic-helm.md
    - Using Kops: deploy/deploy-cic-kops.md
    - On Rancher: deploy/deploy-cic-rancher.md
    - On PKS: deploy/deploy-pks.md
  - Expose services of type LoadBalancer: network/type_loadbalancer.md
  - Deployment solutions:
    - Deploy the Citrix ingress controller as an OpenShift router: deploy/deploy-cic-openshift.md
    - Deploy the Citrix ingress controller with OpenShift router sharding support: deploy/deploy-openshift-sharding.md
    - Deploy the Citrix ingress controller using OpenShift Operator : deploy/deploy-cic-openshift-operator.md
    - Deploy the Citrix API gateway using OpenShift Operator: deploy/deploy-api-gateway-openshift.md
    - Deploy the Citrix API gateway using Rancher: deploy/deploy-api-gateway-rancher.md
    - Deploy the Citrix API Gateway with GitOps: deploy/deploy-api-gateway-using-gitops.md
    - Deploy Citrix ADC CPX as an Ingress in Azure Kubernetes Engine: deploy/deploy-azure.md
    - Deploy Citrix ADC CPX as an Ingress in an Azure Kubernetes Service cluster with advanced networking mode: deploy/deploy-azure-cni.md
    - Deploy Citrix ingress controller in an Azure Kubernetes Service cluster with Citrix ADC VPX: deploy/deploy-azure-cic.md
    - Deploy Citrix ADC CPX as an Ingress in Google Cloud Platform: deploy/deploy-gcp.md
    - Deploy the Citrix ingress controller in Anthos Platform: deploy/deploy-anthos.md
    - Deploy Citrix ADC VPX in active-active high availability in EKS environment using Amazon ELB and Citrix ingress controller: deploy/deploy-eks-elb.md
    - Deploy the Citrix ingress controller for Citrix ADC with admin partitions: deploy/deploy-cic-adc-admin-partition.md
    - Multi-cluster ingress and load balancing solution: multicluster/multi-cluster.md
  - Citrix ADC Integrated canary deployment solution: canary/canary.md
    #- Software Requirements: canary.md#software-requirements
    #- Workflow of a Spinnaker pipeline for Citrix ADC Integrated Canary Deployment Solution:
    #- Deploy the Citrix ADC Integrated Canary Deployment Solution in Google cloud Platform:
    #- Troubleshooting: 
  - Licensing: licensing.md
  - Configure:
    - Annotations: configure/annotations.md
    - ConfigMap: configure/config-map.md
    - Ingress: configure/ingress-config.md
    - Ingress class: configure/ingress-classes.md
    - Service class: configure/service-classes.md
    - HTTP, TCP or SSL Profiles: configure/profiles.md
    - Log levels: configure/log-levels.md
    - COE ConfigMap: configure/config-map-coe.md
    - TCP profile support for services of type LoadBalancer: configure/TCP-profile-type-lb.md
    - SSL certificate for services of type LoadBalancer through the Kubernetes secret resource: configure/service-type-lb-ssl-secret.md
    - BGP advertisement for type LoadBalancer services and Ingresses using Citrix ADC CPX: configure/cpx-service-type-lb.md
  - Network:
    - Static routing: network/staticrouting.md
    - Establish network between K8s nodes and Ingress Citrix ADC using Citrix node controller: network/node-controller.md
    - Expose services of type NodePort: network/nodeport.md
    - Pod to pod communication using Calico: network/calico-network.md
    - Enhancement to services of type LoadBalancer: network/bgp-enhancement.md
  - CRDs: 
    - Authentication: crds/auth.md
    - Rate limit: crds/rate-limit.md
    - Rewrite and Responder: crds/rewrite-responder.md
    - IPAM or VIP: crds/vip.md
    - Content Routing: crds/content-routing.md
    - Web application firewall: crds/waf.md
    - Bot: crds/bot.md
  - Certificate management:
    #- TLS certificate handling for multiple Ingress: certificate-management/tls-certificate-handling-multiple-ingress.md
    #- TLS certificates in Citrix Ingress Controller: certificate-management/tls-certificate-handling.md
    - TLS certificates handling in Citrix ingress controller: certificate-management/tls-certificates.md
    - TLS client authentication in Citrix ADC: certificate-management/client-auth-support.md
    - TLS server authentication in Citrix ADC: certificate-management/server-auth.md
    - Install, link, and update certificates on Citrix ADC using the Citrix ingress controller: certificate-management/link-ca-certificate-chain.md
    - Configure SSL passthrough using Kubernetes Ingress: certificate-management/ssl-passthrough.md
    - Automated certificate management with cert-manager:
      - Introduction: certificate-management/certificate.md
      - Deploy HTTPs web applications on K8s with CIC and Let's Encrypt using cert-manager: certificate-management/acme.md
      - Deploy HTTPs web application on K8s with CIC and HashiCorp vault using cert-manager: certificate-management/vault.md
    - Enable Citrix ADC certificate validation: certificate-management/adc-certificate-validation.md
  - Metrics:
    - Integrate with Prometheus and Grafana: metrics/promotheus-grafana.md
  - Troubleshooting: 
    - Troubleshooting: troubleshooting/troubleshooting.md
    - Enable troubleshooting: troubleshooting/troubleshooting-cic.md
    - Call Home: troubleshooting/call-home.md
  - Upgrade: upgrade.md
  - Use cases:
    - Service mesh lite: deploy/service-mesh-lite.md
    - Securing ingress: how-to/secure-ingress.md
    - TCP use cases: how-to/tcp-use-cases.md
    - HTTP use cases: how-to/http-use-cases.md
    - Session affinity: how-to/session-affinity.md
    - Allowlisting or blocklisting IP addresses: how-to/ip-whitelist-blacklist.md
    - Interoperability with ExternalDNS: how-to/integrate-externaldns.md 
    - Use Citrix ADC credentials stored in Vault server: how-to/use-vault-stored-credentials-for-cic.md
    - Use Kubernetes secrets for storing Citrix ADC credentials: how-to/secret-credentials.md
    - Load balance Ingress traffic to TCP or UDP based application: how-to/tcp-udp-ingress.md
    - Set up dual-tier deployment: how-to/deploy-cic-dual-tier.md
    - Horizontal pod autoscaler: how-to/cpx-hpa.md
    - Direct server return: how-to/dsr.md
    - Admission controller webhook: how-to/webhook-use-case.md
    - Enable GRPC support: how-to/grpc.md
    - Policy based routing: how-to/pbr.md
  - Entity name change: entity-name-change.md
google_analytics:
  - 'UA-59929653-12'
  - 'auto'
