# Project information
site_name: Citrix ingress controller for Kubernetes
site_title: Developer Docs
site_description: Documentation for the Citrix ingress controller for Kubernetes
site_author:
site_url: 

# Repository
repo_name: "Citrix Ingress Controller"
repo_url: "https://github.com/citrix/citrix-k8s-ingress-controller"
edit_uri: "edit/master/docs"

# Copyright
copyright: 'Copyright &copy; 1999-2019 Citrix Systems, Inc. All rights reserved. '

extra_css:
  - 'assets/stylesheets/extra.css'

# Configuration
theme:
  name: null
  custom_dir: material

  # 404 page
  static_templates:
    - 404.html

  # Don't include MkDocs' JavaScript
  include_search_page: false
  search_index_only: true

  # Default values, taken from mkdocs_theme.yml
  language: en
  feature:
    tabs: false
  palette:
    primary: white
    accent: blue
  font: false
  favicon: /media/favicon.ico
  logo: https://developer-docs.citrix.com/_static/Citrix_Logo_Black.png

# Customization
extra:
  social:
    - type: youtube
      link: https://www.youtube.com/channel/UCiOupk9QF6jdk3EDKTHDykA
    - type: github-alt
      link: https://github.com/citrix
    - type: twitter
      link: https://twitter.com/citrixdeveloper
    - type: linkedin
      link: https://www.linkedin.com/company/citrix/

markdown_extensions:
  - admonition
  - codehilite
  - toc:
      permalink: true
  - footnotes
  - meta
  - extra

# Page tree
nav:
  - Overview: index.md
  - Release notes: release-notes.md
  - Supported platforms and deployments: support-matrix.md
  - Deployment topologies: deployment-topologies.md
  - Deploy the Citrix ingress controller: 
    - Using YAML: deploy/deploy-cic-yaml.md
    - Using Helm charts: deploy/deploy-cic-helm.md
    - Using Kops: deploy/deploy-cic-kops.md
    - On Rancher: deploy/deploy-cic-rancher.md
  - Deployment solutions:
    - Deploy the Citrix ingress controller as an OpenShift router: deploy/deploy-cic-openshift.md
    - Deploy the Citrix ingress controller with OpenShift router sharding support: deploy/deploy-openshift-sharding.md
    - Deploy Citrix ADC CPX as an Ingress in Azure Kubernetes Engine: deploy/deploy-azure.md
    - Deploy Citrix ADC CPX as an Ingress in Google Cloud Platform: deploy/deploy-gcp.md
    - Deploy Citrix ADC VPX in active-active high availability in EKS environment using Amazon ELB and Citrix ingress controller: deploy/deploy-eks-elb.md
    - Deploy the Citrix ingress controller for Citrix ADC with admin partitions: deploy/deploy-cic-adc-admin-partition.md
  - Citrix ADC Integrated canary deployment solution (beta): canary/canary.md
    #- Software Requirements: canary.md#software-requirements
    #- Workflow of a Spinnaker pipeline for Citrix ADC Integrated Canary Deployment Solution:
    #- Deploy the Citrix ADC Integrated Canary Deployment Solution in Google cloud Platform:
    #- Troubleshooting: 
  - Licensing: licensing.md
  - Configure:
    - Annotations: configure/annotations.md
    - Ingress class: configure/ingress-classes.md
    - Log levels: configure/log-levels.md
  - Network:
    - Static routing: network/staticrouting.md
    - Establish network between K8s nodes and Ingress Citrix ADC using Citrix node controller: network/node-controller.md
    - Expose services of type NodePort: network/nodeport.md
    - Expose services of type LoadBalancer: network/type_loadbalancer.md
  - CRDs: 
    - Using Rewrite and Responder policies in Kubernetes: crds/rewrite-responder.md
    - VIP: crds/vip.md
  - Certificate management:
    #- TLS certificate handling for multiple Ingress: certificate-management/tls-certificate-handling-multiple-ingress.md
    #- TLS certificates in Citrix Ingress Controller: certificate-management/tls-certificate-handling.md
    - TLS certificates handling in Citrix ingress controller: certificate-management/tls-certificates.md
    - Automated certificate management with cert-manager:
      - Introduction: certificate-management/certificate.md
      - Deploy HTTPs web applications on K8s with CIC and Letâ€™s Encrypt using cert-manager: certificate-management/acme.md
      - Deploy HTTPs web application on K8s with CIC and HashiCorp vault using cert-manager: certificate-management/vault.md
  - Metrics:
    - Integrate with Prometheus and Grafana: metrics/promotheus-grafana.md
  - Troubleshooting: troubleshooting.md
  - Upgrade: upgrade.md
  - How-to:
    - Set up dual-tier deployment: how-to/deploy-cic-dual-tier.md
    - Load balance Ingress traffic to TCP or UDP based application: how-to/tcp-udp-ingress.md
  
google_analytics:
  - 'UA-59929653-12'
  - 'auto'
  
